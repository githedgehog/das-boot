apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "das-boot.fullname" . }}
  labels:
    {{- include "das-boot.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "das-boot.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "das-boot.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "das-boot.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      hostNetwork: true
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: https
              containerPort: {{ .Values.service.ports.secure.targetPort }}
              protocol: TCP
          # TODO: we have to rethink how we would like to do the readiness check
          #readinessProbe:
          #  httpGet:
          #    path: /healthz
          #    port: 80
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: config
              mountPath: "/etc/hedgehog/seeder"
              readOnly: true
            - name: client-ca
              mountPath: "/etc/hedgehog/seeder-certs/client-ca"
              readOnly: true
            - name: server-ca
              mountPath: "/etc/hedgehog/seeder-certs/server-ca"
              readOnly: true
            - name: config-ca
              mountPath: "/etc/hedgehog/seeder-certs/config-ca"
              readOnly: true
            - name: server-cert
              mountPath: "/etc/hedgehog/seeder-certs/server"
              readOnly: true
            - name: config-cert
              mountPath: "/etc/hedgehog/seeder-certs/config"
              readOnly: true
            {{- if .Values.settings.artifacts.oci_registries }}
            {{- range .Values.settings.artifacts.oci_registries }}
            - name: {{ .ca.secretName }}
              readOnly: true
              mountPath: {{ .ca.mountPath }}
            {{- end }}
            {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: config
          configMap:
            name: {{ include "das-boot.fullname" . }}
        - name: client-ca
          secret:
            secretName: {{ .Values.secrets.clientCA.name }}
        - name: server-ca
          secret:
            secretName: {{ .Values.secrets.serverCA.name }}
        - name: config-ca
          secret:
            secretName: {{ .Values.secrets.configCA.name }}
        - name: server-cert
          secret:
            secretName: {{ .Values.secrets.server.name }}
        - name: config-cert
          secret:
            secretName: {{ .Values.secrets.config.name }}
        {{- if .Values.settings.artifacts.oci_registries }}
        {{- range .Values.settings.artifacts.oci_registries }}
        - name: {{ .ca.secretName }}
          secret:
            secretName: {{ .ca.secretName }}
        {{- end }}
        {{- end }}
